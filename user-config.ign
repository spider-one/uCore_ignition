{
  "ignition": {
    "version": "3.4.0"
  },
  "kernelArguments": {
    "shouldExist": [
      "mitigations=auto,nosmt",
      "spectre_v2=on",
      "spectre_bhi=on",
      "spec_store_bypass_disable=on",
      "tsx=off",
      "kvm.nx_huge_pages=force",
      "nosmt=force",
      "l1d_flush=on",
      "spec_rstack_overflow=safe-ret",
      "gather_data_sampling=force",
      "reg_file_data_sampling=on",
      "random.trust_bootloader=off",
      "random.trust_cpu=off",
      "intel_iommu=on",
      "amd_iommu=force_isolation",
      "efi=disable_early_pci_dma",
      "iommu=force",
      "iommu.passthrough=0",
      "iommu.strict=1",
      "slab_nomerge",
      "init_on_alloc=1",
      "init_on_free=1",
      "pti=on",
      "vsyscall=none",
      "ia32_emulation=0",
      "page_alloc.shuffle=1",
      "randomize_kstack_offset=on",
      "debugfs=off",
      "oops=panic",
      "lockdown=confidentiality",
      "module.sig_enforce=1"
    ]
  },
  "passwd": {
    "users": [
      {
        "groups": [
          "wheel",
          "sudo"
        ],
        "name": "tomster",
        "sshAuthorizedKeys": [
          "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINkTKkJS7Id1WCyA5Klu/moLG9mP5hTC+v2qYqypMF1u contact@tommytran.io"
        ]
      }
    ]
  },
  "storage": {
    "files": [
      {
        "path": "/etc/zincati/config.d/51-rollout-wariness.toml",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Fedora-CoreOS-Ignition/main/etc/zincati/config.d/51-rollout-wariness.toml"
        }
      },
      {
        "path": "/etc/zincati/config.d/55-updates-strategy.toml",
        "contents": {
          "compression": "",
          "source": "data:,%5Bupdates%5D%0Astrategy%20%3D%20%22immediate%22%0A"
        }
      },
      {
        "path": "/etc/yum.repos.d/_copr:copr.fedorainfracloud.org:secureblue:hardened_malloc.repo",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Fedora-CoreOS-Ignition/main/etc/yum.repos.d/_copr:copr.fedorainfracloud.org:secureblue:hardened_malloc.repo"
        }
      },
      {
        "overwrite": true,
        "path": "/etc/chrony.conf",
        "contents": {
          "source": "https://raw.githubusercontent.com/GrapheneOS/infrastructure/main/chrony.conf"
        }
      },
      {
        "path": "/etc/modprobe.d/vps-blacklist.conf",
        "contents": {
          "source": "https://raw.githubusercontent.com/secureblue/secureblue/live/config/files/usr/etc/modprobe.d/blacklist.conf"
        }
      },
      {
        "path": "/etc/sysctl.d/99-server.conf",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Linux-Setup-Scripts/main/etc/sysctl.d/99-server.conf"
        }
      },
      {
        "path": "/etc/systemd/system/NetworkManager.service.d/99-brace.conf",
        "contents": {
          "source": "https://gitlab.com/divested/brace/-/raw/master/brace/usr/lib/systemd/system/NetworkManager.service.d/99-brace.conf"
        }
      },
      {
        "path": "/etc/systemd/system/irqbalance.service.d/99-brace.conf",
        "contents": {
          "source": "https://gitlab.com/divested/brace/-/raw/master/brace/usr/lib/systemd/system/irqbalance.service.d/99-brace.conf"
        }
      },
      {
        "path": "/etc/ssh/sshd_config.d/10-custom.conf",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Linux-Setup-Scripts/main/etc/ssh/sshd_config.d/10-custom.conf"
        }
      },
      {
        "path": "/etc/ssh/ssh_config.d/10-custom.conf",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Linux-Setup-Scripts/main/etc/ssh/ssh_config.d/10-custom.conf"
        }
      },
      {
        "path": "/etc/systemd/system/sshd.service.d/local.conf",
        "contents": {
          "source": "https://raw.githubusercontent.com/GrapheneOS/infrastructure/main/systemd/system/sshd.service.d/local.conf"
        }
      },
      {
        "path": "/etc/tuned/active_profile",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Fedora-CoreOS-Ignition/main/etc/tuned/active_profile"
        }
      },
      {
        "path": "/etc/tuned/profile_mode",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Fedora-CoreOS-Ignition/main/etc/tuned/profile_mode"
        }
      },
      {
        "path": "/etc/systemd/zram-generator.conf",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Linux-Setup-Scripts/main/etc/systemd/zram-generator.conf"
        }
      },
      {
        "path": "/etc/security/limits.d/30-disable-coredump.conf",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Linux-Setup-Scripts/main/etc/security/limits.d/30-disable-coredump.conf"
        }
      },
      {
        "overwrite": true,
        "path": "/etc/sysconfig/chronyd",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Linux-Setup-Scripts/main/etc/sysconfig/chronyd"
        }
      },
      {
        "overwrite": true,
        "path": "/etc/issue",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Linux-Setup-Scripts/main/etc/issue"
        }
      },
      {
        "overwrite": true,
        "path": "/etc/issue.net",
        "contents": {
          "source": "https://raw.githubusercontent.com/TommyTran732/Linux-Setup-Scripts/main/etc/issue"
        }
      }
    ],
    "links": [
      {
        "path": "/etc/localtime",
        "target": "../usr/share/zoneinfo/Etc/UTC"
      },
      {
        "path": "/etc/systemd/system/multi-user.target.wants/tuned.service",
        "target": "/usr/lib/systemd/system/tuned.service"
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "contents": "[Unit]\nDescription=Initial System Setup\n# We run after `systemd-machine-id-commit.service` to ensure that\n# `ConditionFirstBoot=true` services won't rerun on the next boot.\nAfter=systemd-machine-id-commit.service\nAfter=network-online.target\n# We run before `zincati.service` to avoid conflicting rpm-ostree\n# transactions.\nBefore=zincati.service\nConditionPathExists=!/var/lib/%N.stamp\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/sbin/restorecon -R /var\nExecStart=/usr/sbin/setsebool -P container_use_cephfs off\nExecStart=/usr/sbin/setsebool -P virt_use_nfs off\nExecStart=/usr/sbin/setsebool -P virt_use_samba off\nExecStart=/usr/bin/rpm-ostree install firewalld qemu-guest-agent tuned\nExecStart=/usr/bin/rpm-ostree override brcmfmac-firmware intel-gpu-firmware mt7xxx-firmware atheros-firmware amd-ucode-firmware linux-firmware amd-gpu-firmware realtek-firmware btrfs-progs cifs-utils clevis clevis-dracut clevis-luks clevis-pin-tpm2 clevis-systemd containerd containers-common-extra crun crun-wasm cryptsetup dnsmasq e2fsprogs-libs e2fsprogs flatpak-session-helper fuse-overlayfs fuse-sshfs fuse3 fwupd google-compute-engine-guest-configs-udev iptables-legacy iptables-legacy-libs kexec-tools libnvme lvm2 lvm2-libs mdadm moby-engine nvme-cli podman rsync runc samba-client-libs samba-common libwbclient libsmbclient samba-common-libs socat sssd-client sssd-ldap sssd-common sssd-krb5-common sssd-nfs-idmap sssd-ad sssd-krb5 sssd-ipa sssd-common-pac toolbox tpm2-tools tpm2-tss-fapi vim-data vim-minimal wireguard-tools\nExecStart=/usr/bin/sed -i 's/\\s+nullok//g' /etc/pam.d/system-auth\nExecStart=/usr/bin/sed -i '$ a\\allow 10.0.2.2/32' /etc/chrony.conf\nExecStart=/usr/bin/echo 'EDITOR=nano' \u003e\u003e /etc/bashrc\nExecStart=/usr/bin/echo 'VISUAL=nano' \u003e\u003e /etc/bashrc\nExecStart=/usr/bin/touch /var/lib/%N.stamp\nExecStart=/usr/bin/systemctl --no-block reboot\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "postinst.service"
      },
      {
        "contents": "[Unit]\nDescription=Initial System Setup Part 3\n# We run this after the packages have been overlayed\nAfter=firewalld.service\nConditionPathExists=!/var/lib/%N.stamp\nConditionPathExists=/var/lib/postinst.stamp\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/bin/echo 'libhardened_malloc.so' \u003e /etc/ld.so.preload\nExecStart=/usr/bin/systemctl enable --now firewalld\nExecStart=/usr/bin/firewall-cmd --lockdown-on\nExecStart=/usr/bin/firewall-cmd --permanent --add-service=ntp\nExecStart=/usr/bin/firewall-cmd --reload\n\n[Install]\nWantedBy=multi-user.target\n",
        "enabled": true,
        "name": "postinst2.service"
      },
      {
        "enabled": false,
        "name": "docker.service"
      },
      {
        "enabled": true,
        "name": "fstrim.timer"
      },
      {
        "enabled": true,
        "name": "systemd-oomd.service"
      },
      {
        "enabled": false,
        "mask": true,
        "name": "rpm-ostree-countme.timer"
      },
      {
        "enabled": false,
        "name": "sshd.service"
      },
      {
        "enabled": true,
        "name": "sshd.socket"
      },
      {
        "enabled": false,
        "mask": true,
        "name": "kdump.service"
      },
      {
        "enabled": false,
        "mask": true,
        "name": "debug-shell.service"
      },
      {
        "enabled": false,
        "mask": true,
        "name": "coreos-cni-networking-check.service"
      }
    ]
  }
}
